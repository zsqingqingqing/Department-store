<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置Mabatis映射文件 -->
<mapper namespace="com.entity.Orders">
	<resultMap type="orders" id="ordersMap">
		<id property="ordersid" column="ordersid" />
		<result property="ordercode" column="ordercode" />
		<result property="usersid" column="usersid" />
		<result property="sellerid" column="sellerid" />
		<result property="goodsid" column="goodsid" />
		<result property="price" column="price" />
		<result property="status" column="status" />
		<result property="addtime" column="addtime" />
		<result property="receiver" column="receiver" />
		<result property="contact" column="contact" />
		<result property="address" column="address" />
		<result property="username" column="username" />
		<result property="goodsname" column="goodsname" />
		<result property="sellername" column="sellername" />
		<result property="num" column="num" />
	</resultMap>
	<!-- 插入语句 DAO通过id调用此配置 -->
	<insert id="insertOrders" parameterType="orders">
		insert into
		orders(ordersid , ordercode , usersid , sellerid , goodsid ,
		price ,
		status , addtime , receiver , contact , address , num )
		values(#{ordersid} ,
		#{ordercode} , #{usersid} , #{sellerid} ,
		#{goodsid} , #{price} ,
		#{status} , #{addtime} , #{receiver} ,
		#{contact} , #{address} ,#{num})
	</insert>
	<!-- 更新语句 DAO通过id调用此配置 -->
	<update id="updateOrders" parameterType="orders">
		update orders set
		ordercode=#{ordercode} , usersid=#{usersid} ,
		sellerid=#{sellerid} ,
		goodsid=#{goodsid} , price=#{price} ,
		status=#{status} ,
		addtime=#{addtime} , receiver=#{receiver} ,
		contact=#{contact} ,
		address=#{address},num=#{num} where ordersid=#{ordersid}
	</update>
	<!-- 按主键删除 DAO通过id调用此配置 -->
	<delete id="deleteOrders" parameterType="String">
		delete from orders where
		ordersid = #{ordersid}
	</delete>
	<!-- 查询全部信息 DAO通过id调用此配置 -->
	<select id="getAllOrders" resultMap="ordersMap">
		select a.* , b.username ,
		c.username as sellername , d.goodsname from orders a , users b , users
		c , goods d where a.usersid = b.usersid and a.sellerid = c.usersid and
		a.goodsid = d.goodsid order by ordersid desc
	</select>
	<!-- 按主键查询 DAO通过id调用此配置 -->
	<select id="getOrdersById" parameterType="String" resultMap="ordersMap">
		select a.* from orders a where ordersid=#{ordersid} order by ordersid
		desc
	</select>
	<!-- 按条件精确查询 DAO通过id调用此配置 -->
	<select id="getOrdersByCond" parameterType="orders" resultMap="ordersMap">
		select a.* , b.username , c.username as sellername , d.goodsname from
		orders a , users b , users c , goods d where a.usersid = b.usersid and
		a.sellerid = c.usersid and a.goodsid = d.goodsid
		<if test="ordercode != null and '' != ordercode">
			and a.ordercode = #{ordercode}
		</if>
		<if test="usersid != null and '' != usersid">
			and a.usersid = #{usersid}
		</if>
		<if test="sellerid != null and '' != sellerid">
			and a.sellerid = #{sellerid}
		</if>
		<if test="goodsid != null and '' != goodsid">
			and a.goodsid = #{goodsid}
		</if>
		<if test="price != null and '' != price">
			and a.price = #{price}
		</if>
		<if test="status != null and '' != status">
			and a.status = #{status}
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime = #{addtime}
		</if>
		<if test="receiver != null and '' != receiver">
			and a.receiver = #{receiver}
		</if>
		<if test="contact != null and '' != contact">
			and a.contact = #{contact}
		</if>
		<if test="address != null and '' != address">
			and a.address = #{address}
		</if>
	</select>
	<!-- 按条件模糊查询 DAO通过id调用此配置 -->
	<select id="getOrdersByLike" parameterType="orders" resultMap="ordersMap">
		select a.* , b.username , c.username as sellername , d.goodsname from
		orders a , users b , users c , goods d where a.usersid = b.usersid and
		a.sellerid = c.usersid and a.goodsid = d.goodsid
		<if test="ordercode != null and '' != ordercode">
			and a.ordercode like CONCAT('%', CONCAT(#{ordercode},
			'%'))
		</if>
		<if test="usersid != null and '' != usersid">
			and b.username like CONCAT('%', CONCAT(#{usersid}, '%'))
		</if>
		<if test="sellerid != null and '' != sellerid">
			and c.username like CONCAT('%', CONCAT(#{sellerid}, '%'))
		</if>
		<if test="goodsid != null and '' != goodsid">
			and d.goodsname like CONCAT('%', CONCAT(#{goodsid}, '%'))
		</if>
		<if test="price != null and '' != price">
			and a.price like CONCAT('%', CONCAT(#{price}, '%'))
		</if>
		<if test="status != null and '' != status">
			and a.status like CONCAT('%', CONCAT(#{status}, '%'))
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime like CONCAT('%', CONCAT(#{addtime}, '%'))
		</if>
		<if test="receiver != null and '' != receiver">
			and a.receiver like CONCAT('%', CONCAT(#{receiver}, '%'))
		</if>
		<if test="contact != null and '' != contact">
			and a.contact like CONCAT('%', CONCAT(#{contact}, '%'))
		</if>
		<if test="address != null and '' != address">
			and a.address like CONCAT('%', CONCAT(#{address}, '%'))
		</if>
	</select>
</mapper>


